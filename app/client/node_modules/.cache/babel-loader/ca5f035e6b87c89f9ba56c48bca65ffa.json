{"ast":null,"code":"var _jsxFileName = \"/Users/ryandoty/Desktop/googleBook/app/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport API from \"./utils/API\";\nimport Nav from \"./components/Nav\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport { List, ListItem } from \"./components/List\";\nimport { Input, TextArea, FormBtn } from \"./components/Form\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.loadBooks = () => {\n      API.getBooks().then(res => {\n        this.setState({\n          books: res.data\n        });\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      API.deleteBook(id).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.title && this.state.author) {\n        API.saveBook({\n          title: this.state.title,\n          author: this.state.author,\n          synopsis: this.state.synopsis\n        }).then(res => this.loadBooks()).catch(err => console.log(err));\n      }\n    };\n\n    this.Books = props => {\n      console.log(props.book);\n      if (!props.book) return React.createElement(React.Fragment, null);else {\n        return React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, props.book.title, props.book.authors.map((e, i) => {\n          return React.createElement(\"span\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, e);\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" LETS FIND YOU A BOOK\"))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"BOOKS TO READ\")), this.state.books.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.books.map(book => React.createElement(ListItem, {\n      key: book._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(this.Books, {\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"No Results to Display\"))), React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"title\",\n      placeholder: \"Title (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Input, {\n      name: \"author\",\n      placeholder: \"Author (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      name: \"synopsis\",\n      placeholder: \"Synopsis (Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(FormBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Submit Book\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ryandoty/Desktop/googleBook/app/client/src/App.js"],"names":["React","Component","API","Nav","Jumbotron","List","ListItem","Input","TextArea","FormBtn","App","state","books","loadBooks","getBooks","then","res","setState","data","console","log","catch","err","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","author","saveBook","synopsis","Books","props","book","authors","map","e","i","componentDidMount","render","length","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport API from \"./utils/API\"\nimport Nav from \"./components/Nav\"\nimport Jumbotron from \"./components/Jumbotron\"\nimport { List, ListItem } from \"./components/List\"\nimport { Input, TextArea, FormBtn } from \"./components/Form\";\n\nclass App extends Component {\n  state = {\n    books: [],\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>{\n        this.setState({ books: res.data})\n        console.log(res.data)\n      }\n        )\n      .catch(err => console.log(err));\n  };\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.author) {\n      API.saveBook({\n        title: this.state.title,\n        author: this.state.author,\n        synopsis: this.state.synopsis\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  Books =(props)=>{\n    console.log(props.book)\n    if(!props.book) return <></>\n    else{\n        return <strong>{props.book.title}\n        {\n          props.book.authors.map((e,i)=>{\n            return <span key={i}>{e}</span>\n          })\n        }\n        </strong>\n      \n    }\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <div className=\"hey\">\n          <Jumbotron>\n          <Nav/>\n            <div className=\"header\"> LETS FIND YOU A BOOK</div>\n            \n          </Jumbotron>\n          \n        </div>\n\n        <div className=\"container\">\n          <div className=\"App-intro\">\n          <Jumbotron>\n              <h1>BOOKS TO READ</h1>\n            </Jumbotron>\n          {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    \n                    \n                      <strong>\n              \n                        <this.Books book={book}/>\n                      </strong>\n                  \n                    \n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </div>\n        </div>\n\n\n        <div className=\"container2\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input name=\"title\" placeholder=\"Title (required)\" />\n              <Input name=\"author\" placeholder=\"Author (required)\" />\n              <TextArea name=\"synopsis\" placeholder=\"Synopsis (Optional)\" />\n              <FormBtn>Submit Book</FormBtn>\n            </form>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}